syntax = "proto3";
package envoy.config.core.v3;
option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/config/core/v3";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;
import "extproto/ext.proto";
option (extproto.hash_all) = true;

// Identifies location of where either Envoy runs or where upstream hosts run.
message Locality {
    // Region this :ref:`zone <envoy_api_field_config.core.v3.Locality.zone>` belongs to.
    string region = 1;

    // Defines the local service zone where Envoy is running. Though optional, it
    // should be set if discovery service routing is used and the discovery
    // service exposes :ref:`zone data <envoy_api_field_config.endpoint.v3.LocalityLbEndpoints.locality>`,
    // either in this message or via :option:`--service-zone`. The meaning of zone
    // is context dependent, e.g. `Availability Zone (AZ)
    // <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html>`_
    // on AWS, `Zone <https://cloud.google.com/compute/docs/regions-zones/>`_ on
    // GCP, etc.
    string zone = 2;

    // When used for locality of upstream hosts, this field further splits zone
    // into smaller chunks of sub-zones so they can be load balanced
    // independently.
    string sub_zone = 3;
}
