// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/base.proto

package v3

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Identifies location of where either Envoy runs or where upstream hosts run.
type Locality struct {
	// Region this :ref:`zone <envoy_api_field_config.core.v3.Locality.zone>` belongs to.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Defines the local service zone where Envoy is running. Though optional, it
	// should be set if discovery service routing is used and the discovery
	// service exposes :ref:`zone data <envoy_api_field_config.endpoint.v3.LocalityLbEndpoints.locality>`,
	// either in this message or via :option:`--service-zone`. The meaning of zone
	// is context dependent, e.g. `Availability Zone (AZ)
	// <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html>`_
	// on AWS, `Zone <https://cloud.google.com/compute/docs/regions-zones/>`_ on
	// GCP, etc.
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	// When used for locality of upstream hosts, this field further splits zone
	// into smaller chunks of sub-zones so they can be load balanced
	// independently.
	SubZone              string   `protobuf:"bytes,3,opt,name=sub_zone,json=subZone,proto3" json:"sub_zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Locality) Reset()         { *m = Locality{} }
func (m *Locality) String() string { return proto.CompactTextString(m) }
func (*Locality) ProtoMessage()    {}
func (*Locality) Descriptor() ([]byte, []int) {
	return fileDescriptor_de9a9432f7042a04, []int{0}
}
func (m *Locality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Locality.Unmarshal(m, b)
}
func (m *Locality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Locality.Marshal(b, m, deterministic)
}
func (m *Locality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Locality.Merge(m, src)
}
func (m *Locality) XXX_Size() int {
	return xxx_messageInfo_Locality.Size(m)
}
func (m *Locality) XXX_DiscardUnknown() {
	xxx_messageInfo_Locality.DiscardUnknown(m)
}

var xxx_messageInfo_Locality proto.InternalMessageInfo

func (m *Locality) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Locality) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Locality) GetSubZone() string {
	if m != nil {
		return m.SubZone
	}
	return ""
}

func init() {
	proto.RegisterType((*Locality)(nil), "envoy.config.core.v3.Locality")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/base.proto", fileDescriptor_de9a9432f7042a04)
}

var fileDescriptor_de9a9432f7042a04 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0x31, 0x4e, 0x03, 0x31,
	0x14, 0x44, 0xb5, 0x10, 0x85, 0xe0, 0xd2, 0x8a, 0x50, 0x48, 0x81, 0x10, 0x15, 0x0d, 0xfe, 0xc5,
	0xde, 0x80, 0x16, 0x1a, 0x22, 0xd1, 0xa4, 0x41, 0x6b, 0xeb, 0x63, 0x0c, 0x8b, 0xc7, 0xb2, 0xbd,
	0xab, 0x0d, 0x27, 0xe2, 0x08, 0x9c, 0x87, 0x3b, 0xd0, 0xa3, 0xd8, 0xf4, 0xa4, 0x9b, 0x79, 0x7a,
	0xc5, 0x8c, 0xd8, 0x58, 0x97, 0x5f, 0x06, 0xad, 0x0c, 0xde, 0x29, 0xa1, 0xc7, 0x8d, 0x03, 0xd9,
	0x1e, 0xa0, 0x10, 0xf1, 0xca, 0x26, 0xa7, 0xda, 0xba, 0xe0, 0x88, 0xa7, 0xcc, 0xd1, 0x77, 0x3d,
	0xb1, 0x1f, 0xb1, 0x23, 0x03, 0xff, 0xec, 0x2c, 0x19, 0x44, 0xa6, 0xb1, 0x25, 0xdd, 0x25, 0x56,
	0x21, 0x22, 0x43, 0x2e, 0x8b, 0xa0, 0xaa, 0xa0, 0xf6, 0x82, 0x1a, 0xdb, 0xf5, 0xd2, 0xc2, 0xa2,
	0x08, 0xb4, 0x4f, 0xd5, 0x5d, 0x4b, 0x9e, 0x72, 0x85, 0x3c, 0xe5, 0xca, 0xae, 0x1e, 0xc4, 0xe2,
	0x1e, 0xa6, 0xeb, 0x5d, 0xde, 0xc9, 0x33, 0x31, 0x8f, 0x6c, 0x1d, 0xfc, 0xaa, 0xb9, 0x6c, 0xae,
	0x4f, 0x37, 0x7f, 0x4d, 0x4a, 0x31, 0xfb, 0x80, 0xe7, 0xd5, 0x51, 0xa1, 0x25, 0xcb, 0x73, 0xb1,
	0x48, 0x83, 0x7e, 0x2a, 0xfc, 0xb8, 0xf0, 0x93, 0x34, 0xe8, 0x2d, 0x3c, 0xdf, 0x3e, 0x7e, 0xfd,
	0xcc, 0x9a, 0xcf, 0xef, 0x8b, 0x66, 0x7b, 0x77, 0xd8, 0xe1, 0xf0, 0x66, 0xff, 0x3f, 0xad, 0xe7,
	0x65, 0x70, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x40, 0x3f, 0xc5, 0x46, 0x01, 0x00, 0x00,
}

func (this *Locality) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Locality)
	if !ok {
		that2, ok := that.(Locality)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Region != that1.Region {
		return false
	}
	if this.Zone != that1.Zone {
		return false
	}
	if this.SubZone != that1.SubZone {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
